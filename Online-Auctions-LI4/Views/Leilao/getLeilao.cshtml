@model Dictionary<LeilaoModel, Dictionary<ProdutoModel, Dictionary<UserModel, Dictionary<UserModel, int>>>>
@{
    Layout = "_Layout";
}

<style>

    /* Basic Styling */

    body {
        line-height: 1.5;
        font-family: 'Poppins', sans-serif;
        margin-bottom: 120px; /* Ou ajuste conforme necessário */
        margin-bottom: 20%;
    }
 
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 15px;
      display: flex;
    }

    /* Columns */
    .left-column {
      width: 65%;
      display: flex;
      flex-direction: column;
      margin-top: 60px;
    }
 
    .right-column {
      width: 35%;
      margin-top: 60px;
    }

    .secundarias {
        margin-top: 10px;
    }

    /*Imagem*/


    /* Product Description */
    .product-description {
      border-bottom: 1px solid #E1E8EE;
      margin-bottom: 10px;
    }
    .product-description span {
      font-size: 10px;
      color: #358ED7;
      letter-spacing: 1px;
      text-transform: uppercase;
      text-decoration: none;
    }
    .product-description h1 {
      font-weight: 300;
      font-size: 50px;
      color: #43484D;
      letter-spacing: -2px;
    }
    .product-description p {
      font-size: 15px;
      font-weight: 300;
      color: #86939E;
      line-height: 20px;
    }

    /* Product Color */
    table {
      border-collapse: collapse;
      width: 100%;
      margin-bottom: 10px;
    }


    td, th {
      border: 1px solid #dddddd;
      text-align: left;
      padding: 8px;
      font-size: 15px;
    }


    tr:nth-child(even) {
      background-color: #dddddd;
    }

    /* Cable Configuration */
    .cable-choose {
      margin-bottom: 20px;
      display: flex;
      justify-content: space-between;
    }
 
    .cable-choose button {
      border: 2px solid ;
      border-radius: 6px;
      padding: 13px 20px;
      font-size: 15px;
      color: white;
      background-color: #346cb5;
      cursor: pointer;
      transition: all .5s;
    }
 
    .cable-choose button:hover,
    .cable-choose button:active,
    .cable-choose button:focus {
      border: 2px solid #86939E;
      outline: none;
    }
 
    .cable-config {
      border-bottom: 1px solid #E1E8EE;
      margin-bottom: 20px;
    }
 
    .cable-config a {
      text-decoration: none;
      font-size: 15px;
      position: relative;
      margin: 10px 0;
      display: inline-block;
      font-weight: bolder;
      margin-left: 10px;
    }
 
    .cable-config a:before {
      height: 15px;
      width: 15px;
      border-radius: 50%;
      border: 2px solid rgba(53, 142, 215, 0.5);
      display: inline-block;
      text-align: center;
      line-height: 16px;
      opacity: 0.5;
      margin-right: 5px;
    }

    /* Product Price */
    .product-price {
      display: flex;
      align-items: center;
    }
 
    .product-price span {
      font-size: 26px;
      font-weight: 300;
      color: #43474D;
      margin-right: 20px;
    }
 
    .cart-btn {
      background-color: #9fa5ab;
      border-radius: 6px;
      font-size: 16px;
      color: #FFFFFF;
      text-decoration: none;
      padding: 10px 30px;
      margin-left: 20px;
      transition: all .5s;
    }
    .cart-btn:hover {
      background-color: black;
    }
    textarea {
      width: 60%;
      height: 40px;
      padding: 7px 20px;
      box-sizing: border-box;
      border: 2px solid #ccc;
      border-radius: 4px;
      background-color: #f8f8f8;
      font-size: 16px;
      resize: none;
      overflow:hidden;
    }

    ::-webkit-scrollbar {
        width: 10px;
        height: 10px;
    }

    ::-webkit-scrollbar-track {
        box-shadow: inset 0 0 10px #D3D3D3;
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb {
        border-radius: 10px;
        background: #D3D3D3;
        box-shadow: inset 0 0 6px rgba(0,0,0,0.5);
    }

        ::-webkit-scrollbar-thumb:hover {
            background: #C0C0C0;
        }
}   


</style>

<main class="container">

    <!-- Left Column / Headphones Image -->
    <div class="left-column">
        @if (!string.IsNullOrEmpty(Model.First().Key.Imagem))
        {
            <img src="@Url.Content("~/" + Model.First().Key.Imagem)" style="width: 86%;" alt="tazonde iamgem">
        }
        else
        {
            <p>Imagem não encontrada</p>
        }

      <div class="secundarias">
            <img src="~/luxo-miami2.jpg" style="width: 21%" alt="ez pizi" />
            <img src="~/gettyimages-160380432-612x612.jpg" style="width: 21%" alt="ez pizi" />
            <img src="~/decoracao-apartamento-pequeno-8.jpg" style="width: 21%" alt="ez pizi" />
            <img src="~/fercopor_enlight_penthouse_4.jpg" style="width: 21%" alt="ez pizi" />
      </div>

    </div>


    <!-- Right Column -->
    <div class="right-column">

      <!-- Product Description -->
      <div class="product-description">
            <h2 style="font-weight: bold">@Model.First().Value.First().Key.Titulo</h2>
            <h5>@Model.First().Value.First().Key.Localizacao</h5>
            <p class="text">
                @Model.First().Value.First().Key.Descricao
            </p>
      </div>

      <!-- Product Configuration -->
        @if (@Model.First().Key.Status == Online_Auctions_LI4.enums.LeilaoEnum.Iniciado && CalcularTempoRestante(@Model.First().Key.DataFinal) != "Tempo Encerrado")
        {
            <div class="product-configuration">
                <table>
                    <tr>
                        <th>Tipo de Lance</th>
                        <th>Valor</th>
                    </tr>
                    <tr>
                        <td>Lance Atual</td>
                        @if (@Model.First().Value.First().Key.PrecoBase == @Model.First().Key.Quantia)
                        {
                            <th style="font-weight: normal;">---------</th>
                        }
                        else
                        {
                            <th>@Model.First().Key.Quantia €</th>
                        }
                    </tr>
                    <tr>
                        <td>Lance Mínimo</td>
                        <td>@Model.First().Value.First().Key.PrecoBase €</td>
                    </tr>
                    <tr>
                        <td>Termina em</td>
                        <td>@CalcularTempoRestante(@Model.First().Key.DataFinal)</td>
                    </tr>
                </table>
            </div>

            <!-- Cable Configuration -->
            <div class="cable-config">
                <span>Licitação rápida</span>
                <div class="cable-choose">
                    <form method="post" asp-controller="Leilao" asp-action="Licitar" asp-route-leilaoId="@Model.First().Key.Id">
                        <input type="hidden" name="Utilizador_ID" value="@Model.First().Value.First().Value.First().Key.Id" />
                        <input type="hidden" name="Leilao_ID" value="@Model.First().Key.Id" />
                        <input type="hidden" name="Horario" value="@DateTime.Now" />
                        <input type="hidden" name="Valor" value="@calculaPrimeiraPercentagem(@Model.First().Key.Quantia, 1.25)"></input>
                        <button>@calculaPrimeiraPercentagem(@Model.First().Key.Quantia, 1.25) €</button>
                    </form>
                    <form method="post" asp-controller="Leilao" asp-action="Licitar" asp-route-leilaoId="@Model.First().Key.Id">
                        <input type="hidden" name="Utilizador_ID" value="@Model.First().Value.First().Value.First().Key.Id" />
                        <input type="hidden" name="Leilao_ID" value="@Model.First().Key.Id" />
                        <input type="hidden" name="Horario" value="@DateTime.Now" />
                        <input type="hidden" name="Valor" value="@calculaPrimeiraPercentagem(@Model.First().Key.Quantia, 1.5)"></input>
                        <button>@calculaPrimeiraPercentagem(@Model.First().Key.Quantia, 1.5) €</button>
                    </form>
                    <form method="post" asp-controller="Leilao" asp-action="Licitar" asp-route-leilaoId="@Model.First().Key.Id">
                        <input type="hidden" name="Utilizador_ID" value="@Model.First().Value.First().Value.First().Key.Id" />
                        <input type="hidden" name="Leilao_ID" value="@Model.First().Key.Id" />
                        <input type="hidden" name="Horario" value="@DateTime.Now" />
                        <input type="hidden" name="Valor" value="@calculaPrimeiraPercentagem(@Model.First().Key.Quantia, 2)"></input>
                        <button>@calculaPrimeiraPercentagem(@Model.First().Key.Quantia, 2) €</button>
                    </form>
                </div>

                <div class="licitaçao">
                    @if (TempData["SucessoLicitacao"] != null)
                    {
                        <div class="alert alert-success alert-sm" style="font-size:13px;">
                            @TempData["SucessoLicitacao"]
                        </div>
                    }

                    @if (TempData["ErroLicitacao"] != null)
                    {
                        <div class="alert alert-danger alert-sm" style="font-size:13px;">
                            @TempData["ErroLicitacao"]
                        </div>
                    }

                    <span>Licitação direta</span>
                    <div class="product-price">
                        <form method="post" asp-controller="Leilao" asp-action="Licitar" asp-route-leilaoId="@Model.First().Key.Id">
                            <input type="hidden" name="Utilizador_ID" value="@Model.First().Value.First().Value.First().Key.Id" />
                            <input type="hidden" name="Leilao_ID" value="@Model.First().Key.Id" />
                            <input type="hidden" name="Horario" value="@DateTime.Now" />
                            <div class="d-flex" style="align-items: center; margin-bottom: 10px;">
                                <textarea class="textarea" name="Valor" required placeholder="Valor €"></textarea>
                                <button type="submit" class="cart-btn">Licitação</button>
                            </div>
                        </form>
                    </div>
                </div>

            </div>
        }
        else if (CalcularTempoRestante(Model.First().Key.DataFinal) == "Tempo Encerrado")
        {
            <div class="product-configuration">
                <table>
                    <tr>
                        <th>Tipo de Lance</th>
                        <th>Valor</th>
                    </tr>
                    <tr>
                        <td>Lance Vencedor</td>
                        @if (@Model.First().Value.First().Key.PrecoBase == @Model.First().Key.Quantia)
                        {
                            <th style="font-weight: normal;">---------</th>
                        }
                        else
                        {
                            <th>@Model.First().Key.Quantia €</th>
                        }
                    </tr>
                    <tr>
                        <td>Vencedor</td>
                        <td>@Model.First().Value.First().Value.First().Key.Username</td>
                    </tr>
                    <tr>
                        <td>Numero de licitações</td>
                        <td>@Model.First().Value.First().Value.First().Value.First().Value</td>
                    </tr>
                </table>
            </div>

            @if (Model.First().Value.First().Value.First().Value.First().Key.Username == Model.First().Value.First().Value.First().Key.Username && Model.First().Value.First().Key.Utilizador_ID != Model.First().Value.First().Value.First().Value.First().Key.Id)
            {
                <div class="pt-1" style="margin-top:20px;">
                    <h6 style="text-align:center;margin-bottom:20px;font-weight: bold;">Parabéns, você foi o vencedor do leilão!</h6>
                    <button class="btn btn-dark btn-block w-100" type="submit">Reclamar Leilão</button>
                </div>
            }
        }

        else if (@Model.First().Key.Status == Online_Auctions_LI4.enums.LeilaoEnum.Espera)
        {
            <div class="pt-1" style="margin-top:20px;">
                <h6 style="text-align:center;margin-bottom:20px;font-weight: bold;">Este leilão ainda não foi iniciado.</h6>
                @if (Model.First().Value.First().Value.First().Value.First().Key.Id == Model.First().Value.First().Key.Utilizador_ID)
                {
                    <button asp-controller="Produto" asp-action="Index" class="btn btn-dark btn-block w-100" type="submit">Iniciar Leilão</button>
                }
            </div>
        }

  </main>


@functions {
    public string CalcularTempoRestante(DateTime dataFinal)
    {
        var agora = DateTime.Now;
        var tempoRestante = dataFinal - agora;

        if (tempoRestante > TimeSpan.Zero)
        {
            // Formatação do tempo restante
            return $"{tempoRestante.Hours:D2}:{tempoRestante.Minutes:D2}:{tempoRestante.Seconds:D2}";
        }
        else
        {
            return "Tempo Encerrado";
        }
    }

    public int calculaPrimeiraPercentagem(double valor, double percentagem)
    {
        double resultadoDouble = valor * percentagem;
        int resultadoInt = (int)resultadoDouble;
        return resultadoInt;
    }
}
